# -*- coding: utf-8 -*-
"""Prediction of house pricing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BfEl6dHfAYwMF0y70rB1_J7Pb8E1GCW6
"""

#Juarez Ramirez Luis Enrique
import numpy as np
import seaborn as sns
import requests
from bs4 import BeautifulSoup
url = 'https://www.flat.mx/venta/propiedades-en-ciudad-de-mexico'
response = requests.get(url)
soup = BeautifulSoup(response.content, 'html.parser')
prec=[]
informacionG=[]
property_cards = soup.find_all('div', class_='relative mt-auto flex flex-row pr-8')
for link in property_cards:
     prec.append(link.text)

cadenas = prec
precios = []
for cadena in cadenas:
    lista_subcadenas = cadena.split('$')
    precio_sin_formato = lista_subcadenas[1].replace(',', '').replace('.', '')
    precio_num = float(precio_sin_formato)
    precios.append(precio_num)
print(precios)

x= soup.find_all('span', class_='ml-2 truncate font-montserrat text-xs font-bold tabular-nums text-black')
for link in x:
     informacionG.append(link.text)

original_list = informacionG
metros = []
for i in range(0, len(original_list), 5):
    metros.append(original_list[i])

habitaciones= []
for i in range(1, len(original_list), 5):
    habitaciones.append(original_list[i])
#convirtiendo la lista en numeros
lista_texto = habitaciones
lista_numeros = []
for texto in lista_texto:
    numero = int(texto)
    lista_numeros.append(numero)

lista_numeros
#lista_numeros es igual a habitaciones

arr1 = np.array(lista_numeros)
arr2 = np.array(precios)

# Calcular la matriz de correlación
matriz_corr = np.corrcoef(arr1, arr2)

# Imprimir la matriz de correlación
print(matriz_corr)

from sklearn.linear_model import LinearRegression
# Creamos un modelo de regresión lineal
modelo = LinearRegression()

# Entrenamos el modelo con los datos
X = [[h] for h in lista_numeros]
y = precios
modelo.fit(X, y)


prediccion = modelo.predict([[10]])
print(prediccion)